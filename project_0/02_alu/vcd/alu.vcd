$date
	Sat Jul  6 20:40:17 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 32 ! o_data_y [31:0] $end
$var wire 1 " o_data_c $end
$var reg 1 # i_clk $end
$var reg 32 $ i_data_a [31:0] $end
$var reg 32 % i_data_b [31:0] $end
$var reg 3 & i_func [2:0] $end
$var reg 256 ' vcd_file [255:0] $end
$var integer 32 ( i [31:0] $end
$scope module u_alu $end
$var wire 32 ) i_data_a [31:0] $end
$var wire 32 * i_data_b [31:0] $end
$var wire 3 + i_func [2:0] $end
$var wire 1 " o_data_c $end
$var wire 32 , data_sum [31:0] $end
$var wire 32 - data_b_n [31:0] $end
$var reg 32 . o_data_y [31:0] $end
$upscope $end
$scope task init $end
$upscope $end
$scope task test $end
$var reg 32 / data_a [31:0] $end
$var reg 32 0 data_b [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
bx (
b101110001011110111011001100011011001000010111101100001011011000111010100101110011101100110001101100100 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#10
1#
#20
0#
#30
b0 (
b10001000100010001000100010001 0
b1010101010101010101010101010101 /
1#
#31
b10001000100010001000100010001 -
b1010101010101010101010101010101 !
b1010101010101010101010101010101 .
b1100110011001100110011001100110 ,
b1 &
b1 +
b10001000100010001000100010001 %
b10001000100010001000100010001 *
b1010101010101010101010101010101 $
b1010101010101010101010101010101 )
#40
0#
#50
b1 (
1#
#51
b1100110011001100110011001100110 !
b1100110011001100110011001100110 .
b10 &
b10 +
#60
0#
#70
b10 (
1#
#71
b0 !
b0 .
b11 &
b11 +
#80
0#
#90
b11 (
1#
#91
b1000100010001000100010001000011 ,
1"
b11101110111011101110111011101110 -
b1000100010001000100010001000100 !
b1000100010001000100010001000100 .
b100 &
b100 +
#100
0#
#110
b100 (
1#
#111
b11111111111111111111111111111111 !
b11111111111111111111111111111111 .
b101 &
b101 +
#120
0#
#130
b101 (
1#
#131
b1000100010001000100010001000011 !
b1000100010001000100010001000011 .
b110 &
b110 +
#140
0#
#150
b110 (
1#
#151
b0 !
b0 .
b111 &
b111 +
#160
0#
#170
b111 (
1#
#171
b1100110011001100110011001100110 ,
0"
b10001000100010001000100010001 -
b10001000100010001000100010001 !
b10001000100010001000100010001 .
b0 &
b0 +
#180
0#
#190
b11111111111111111111111111111111 0
b11111111111111111111111111111111 /
b0 (
1#
#191
b11111111111111111111111111111111 -
b11111111111111111111111111111111 !
b11111111111111111111111111111111 .
b11111111111111111111111111111110 ,
1"
b1 &
b1 +
b11111111111111111111111111111111 %
b11111111111111111111111111111111 *
b11111111111111111111111111111111 $
b11111111111111111111111111111111 )
#200
0#
#210
b1 (
1#
#211
b11111111111111111111111111111110 !
b11111111111111111111111111111110 .
b10 &
b10 +
#220
0#
#230
b10 (
1#
#231
b0 !
b0 .
b11 &
b11 +
#240
0#
#250
b11 (
1#
#251
b11111111111111111111111111111111 ,
0"
b0 -
b0 !
b0 .
b100 &
b100 +
#260
0#
#270
b100 (
1#
#271
b11111111111111111111111111111111 !
b11111111111111111111111111111111 .
b101 &
b101 +
#280
0#
#290
b101 (
1#
#291
b110 &
b110 +
#300
0#
#310
b110 (
1#
#311
b0 !
b0 .
b111 &
b111 +
#320
0#
#330
b111 (
1#
#331
b11111111111111111111111111111110 ,
1"
b11111111111111111111111111111111 !
b11111111111111111111111111111111 .
b11111111111111111111111111111111 -
b0 &
b0 +
#340
0#
#350
b10101010101010101010101010101010 0
b10001000100010001000100010001 /
b0 (
1#
#351
0"
b10111011101110111011101110111011 !
b10111011101110111011101110111011 .
b10101010101010101010101010101010 -
b10111011101110111011101110111011 ,
b1 &
b1 +
b10101010101010101010101010101010 %
b10101010101010101010101010101010 *
b10001000100010001000100010001 $
b10001000100010001000100010001 )
#360
0#
#370
b1 (
1#
#371
b10 &
b10 +
#380
0#
#390
b10 (
1#
#391
b0 !
b0 .
b11 &
b11 +
#400
0#
#410
b11 (
1#
#411
b1100110011001100110011001100110 ,
b10001000100010001000100010001 !
b10001000100010001000100010001 .
b1010101010101010101010101010101 -
b100 &
b100 +
#420
0#
#430
b100 (
1#
#431
b1010101010101010101010101010101 !
b1010101010101010101010101010101 .
b101 &
b101 +
#440
0#
#450
b101 (
1#
#451
b1100110011001100110011001100110 !
b1100110011001100110011001100110 .
b110 &
b110 +
#460
0#
#470
b110 (
1#
#471
b1 !
b1 .
b111 &
b111 +
#480
0#
#490
b111 (
1#
#491
b10111011101110111011101110111011 ,
b10101010101010101010101010101010 -
b0 !
b0 .
b0 &
b0 +
#500
0#
#510
b11000000100010010101111010000001 0
b10010000101010011010100100100 /
b0 (
1#
#511
b11000000100010010101111010000001 -
b11010010100111010111111110100101 !
b11010010100111010111111110100101 .
b11010010100111101001001110100101 ,
b1 &
b1 +
b11000000100010010101111010000001 %
b11000000100010010101111010000001 *
b10010000101010011010100100100 $
b10010000101010011010100100100 )
#520
0#
#530
b1 (
1#
#531
b11010010100111101001001110100101 !
b11010010100111101001001110100101 .
b10 &
b10 +
#540
0#
#550
b10 (
1#
#551
b0 !
b0 .
b11 &
b11 +
#560
0#
#570
b11 (
1#
#571
b1010001100010111101011010100010 ,
b111111011101101010000101111110 -
b10010000101000010000100100100 !
b10010000101000010000100100100 .
b100 &
b100 +
#580
0#
#590
b100 (
1#
#591
b111111011101111011010101111110 !
b111111011101111011010101111110 .
b101 &
b101 +
#600
0#
#610
b101 (
1#
#611
b1010001100010111101011010100010 !
b1010001100010111101011010100010 .
b110 &
b110 +
#620
0#
#630
b110 (
1#
#631
b1 !
b1 .
b111 &
b111 +
#640
0#
#650
b111 (
1#
#651
b11010010100111101001001110100101 ,
b11000000100010010101111010000001 -
b10001010000000000 !
b10001010000000000 .
b0 &
b0 +
#660
0#
#670
b1000 (
1#
#680
0#
#690
1#
#700
0#
#710
1#
